{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"R","language":"R","name":"ir"},"language_info":{"codemirror_mode":"r","file_extension":".r","mimetype":"text/x-r-source","name":"R","pygments_lexer":"r","version":"3.3.1"},"colab":{"name":"Copy of Ejercicio 1 (R) - Predicción por clasificación","provenance":[{"file_id":"1fxFlKD27Hk-4CXvqtOpBoy7wpq-2ATfO","timestamp":1598237726601},{"file_id":"1sO5Na67e8z-h5hNShpa9eHDQht1rER0r","timestamp":1597776885433},{"file_id":"1xcSQB0-YEbAZZb4NkQGQt8K0GLcMoeDX","timestamp":1597609576766},{"file_id":"1kqAqDykFDJOPZjQcL9z-EOl2mwG4g4Xy","timestamp":1569836298351},{"file_id":"1nWFDoTmZPjhtpU8M2N_fDwTFtTN2Hy-h","timestamp":1569268538225},{"file_id":"https://github.com/IRkernel/IRkernel/blob/master/example-notebooks/Demo.ipynb","timestamp":1568906751276}],"collapsed_sections":[],"toc_visible":true}},"cells":[{"cell_type":"markdown","metadata":{"id":"AEA4r6FfIRE5","colab_type":"text"},"source":["# Ejercicio 1 - Evaluación de Modelos de Clasificación\n","\n","Este ejercicio se centra en el entrenamiento y evaluación de modelos de clasificación supervisada, sobre un conjunto de datos de campañas de marketing de productos bancarios. \n","\n","## Contexto: Análisis de éxito en campaña de marketing\n","\n","Fuente: https://archive.ics.uci.edu/ml/datasets/Bank+Marketing\n","\n","El foco está en la implementación de varios clasificadores para predicir el valor de un atributo, desde un *dataset* de información de un resultados de personas contactadas por una campaña de marketing y que compraron la oferta (atributo \"OK\"), con cerca de 41.200 registros de personas contactadas.\n","\n","Este conjunto de datos (abierto para este tipo de usos instruccionales), consiste en 20 atributos y 1 clase de etiquetas (totalizando 21 columnas) y corresponde a los datos de una campaña telefónica a diversos clientes en Portugal, ofreciéndoles la compra de un producto bancario. En varios casos, un cliente fue contactado varias veces antes de aceptar el el depósito a plazo ofrecido por la campaña (OK = yes). \n","\n","Algunos de los atributos relevantes son (combinando atributos categóricos, con numéricos):\n","* **Datos personales**: Edad, Ocupación, Estado Civil, Nivel de Educación.\n","* **Datos financieros**: Su casa tiene crédito hipotecario, default: si el crédito ha caído en quiebra; tiene un crédito de consumo.\n","* **Datos de contactos de la campaña actual**: Tipo de Comunicación (celular o teléfono fijo); Mes del último contacto; Día de la semana del contacto; duración de la llamada (segundos); Contacto: N° de contactos durante la campaña; DíasAtrás: días transcurridos desde último contacto; Resultado: resultado de la última llamada (falló, no-existe, éxito)\n","* **Datos socioeconómicos**: EmpTasaVar: tasa de variación de empleabilidad; IPC: índice de precios consumidor mensual; ICC: índice de confianza consumidor mensual; Euribor3m: tasa euribor de 3 meses indicador diario; NumEmpleados: cantidad de gente empleada, en indicador trimestral. \n","\n","Esta adaptación en particular, por el equipo de R:Solver (RSolver.com), enfrenta diferentes objetivos de aprendizaje dentro de los cursos de Big Data y Machine Learning.\n","\n"]},{"cell_type":"markdown","metadata":{"id":"BhFF63rsMfbI","colab_type":"text"},"source":["## Instrucciones Generales\n","En este caso, se busca entender el comportamiento y desempeño de idferentes modelos de clasificación sobre este conjunto de datos, para predecir la variable de interés: **OK**, que servirá para predecir en casos futuros, según los datos de contactabilidad de un cliente, si el cliente aceptará o no contratar el depósito a plazo.\n","\n","Todos los alumnos, ya sea en grupo, o individualmente (si no tienen compañeros), deben contestar las preguntas que se indican en las secciones de \"Preguntas\", más adelante. Se puede recurrir a ejercicios de otras fuentes, así como al material de clases.\n","\n","El formato del email es:\n","\n","To: rsandova@ing.puc.cl\n","\n","Subject: Ejercicio 1 - (AÑO)(MES)(DÍA)    (por ej: Ejercicio 1 - 20200818)\n","\n","Integrantes: (nombre y apellido), (nombre y apellido), ...\n","\n","Tabla de datos de ejecuciones comparadas.\n","\n","El mejor desempeño de modelo es (indicando análisis y sustento para la conclusión):\n","\n"]},{"cell_type":"markdown","metadata":{"id":"nbsvny1wYwsT","colab_type":"text"},"source":["## Paso 0: Instalar las librerías de modelos de clasificación\n","\n","Esto se ejecuta sólo una vez al comienzo de la sesión de cada persona. No se necesita volver a ejecutar con cada nueva prueba del resto de los scripts."]},{"cell_type":"code","metadata":{"id":"Yr8D6ajXY2T9","colab_type":"code","colab":{}},"source":["install.packages('caret')\n","install.packages('rpart')\n","install.packages('rpart.plot')\n","install.packages('randomForest')\n","install.packages('e1071')\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"0q3bYb0RM5bx","colab_type":"text"},"source":["## Paso 1: Carga de los datos\n","\n","La siguiente celda de código, carga los datos desde la URL de origen y luego muestra un encabezado con las primeras filas del dataset, para demostrar la disponibilidad de los datos.\n","\n","Esto también puede ser ejecutado una sola vez, si es conveniente."]},{"cell_type":"code","metadata":{"id":"yIIKPnj-IRE8","colab_type":"code","colab":{}},"source":["# Se declara la URL de dónde obtener los datos\n","theUrlMain <- \"http://www.rsolver.com/dcc/docs/bank-additional-full.csv\"\n","\n","# Se declaran los nombres de las columnas\n","columnas = c(\"Edad\",\"Ocupación\",\"EstadoCivil\",\"Educación\",\"Default\",\"Hipotecario\",\"Consumo\",\"Contacto\",\"Mes\",\"Día\",\n","             \"Duración\",\"NumContactos\",\"DíasAtrás\",\"Previo\",\"ResultadoPrevio\", \"EmpTasaVar\", \"IPC\", \"ICC\", \"Euribor3m\", \"NumEmpleados\", \"OK\")\n","\n","# Se cargan datos principales a una estructura (marketing.data), asignando nombres de atributos a las columnas\n","marketing.data <- read.table(file = theUrlMain, header = TRUE, sep = \";\", col.names = columnas)\n","\n","# Se muestran las primeras líneas del dataset, incluyendo nombres asignados a las columnas\n","head(marketing.data, 50)\n","\n","dim(marketing.data)\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"J_LKan-aIMhg","colab_type":"text"},"source":["## Ejercicio - parte 1: Análisis de la completitud y correctitud de los datos\n","\n","Actualmente, el dataset demuestra la existencia de \"vacíos\", especialmente en atributos categóricos, encontrándose el valor \"unknown\". Un primer ejercicio **opcional** es determinar la cantidad de elementos vacíos y, según eso, decidir qué hacer con ellos: corregir los datos, completarlos, o eliminar los ejemplos que no estén completos.\n","\n"]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"iX9lYmofTUJx"},"source":["## Ejercicio - parte 2: Preparación conjuntos de entrenamiento y evaluación\n","\n","En este caso, lo importante es considerar que **es posible cambiar la proporción de datos de entrenamiento y test** viendo el efecto que tiene en el desempeño de los modelos, así como ver si hay algunos posibles atributos que se puedan eliminar, viendo que alguno o varios de los modelos entregan mejores resultados (esto podría deberse a que mientras más atributos, hay modelos, como Árbol Decisión y Random Forest, que tienen mayores desafíos en casos de muchos atributos).\n","\n","**EJERCICIO**\n","\n","Entonces se pide: \n","\n","*   Eliminar columnas del dataset, tal como se muestra en las primeras líneas del código, a modo de ejemplo. Es posible que no todos los atributos sean relevantes y determinar que eliminar algunos de ellos podría mejorar el desempeño de todos o algunos de los modelos.\n","*   Probar varias combinaciones cambiando la proporción de datos. Preliminarmente 4 combinaciones, desde 60%/40% hasta 90%/10%. Según los resultados de la ejecución de los modelos de clasificación de la parte 2, determinar y explicitar cuál es la proporción que logra mejores resultados o desempeño de clasificación y cuál es la influencia del cambio de proporción de entrenamiento/test.\n","\n","Se pide documentar en una tabla todas las combinaciones, viendo los indicadores de desempeño más relevantes: Accuracy, Sensitivity, Specificity (o alternativamente F-Score en vez de estos 2 últimos), **determinando cuál combinación da mejores resultados para cuál de los modelos**.\n"]},{"cell_type":"code","metadata":{"id":"V55CGwB_bPOJ","colab_type":"code","colab":{}},"source":["# Primero, se eliminan algunos atributos, para verificar que no influyen en la calidad de los modelos\n","#marketing.data$Euribor3m <- NULL\n","\n","# Segundo, se separa el dataframe en dos conjuntos: uno de Entrenamiento (Train) y otro de Validación (Test).\n","# La proporción entre ambos conjuntos está definida en la siguiente línea. Por ej: 0.75 = 75% entrenamiento y 25% validación\n","ratio = sample(1:nrow(marketing.data), size = 0.75*nrow(marketing.data)) \n","Train = marketing.data[ratio,] \n","Test = marketing.data[-ratio,] \n","\n","# Finalmente, se muestran las dimensiones que quedaron de estos dos sets\n","dim(Train)\n","dim(Test)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"82LcskQOnNmH","colab_type":"text"},"source":["## Ejercicio - parte 2 complementaria: Ejecución de modelos de clasificación\n","\n","Habiendo definido y establecido los atributos relevantes del dataset y los conjuntos de entrenamiento y de test, a continuación se ejecutan unos modelos de clasificación: Decision Tree, Random Forest, KNN, Naive Bayes y SVM. Cada uno obtiene su resultado, mostrando sus precisiones en general.\n"]},{"cell_type":"markdown","metadata":{"id":"u67Nqw5Ph0oN","colab_type":"text"},"source":["**Árbol de Decisión**"]},{"cell_type":"code","metadata":{"id":"KOpqb-QInkff","colab_type":"code","colab":{}},"source":["library(caret)\n","library(rpart)\n","library(rpart.plot)\n","\n","DT_model <- rpart(OK ~ ., data=Train, method=\"class\", minbucket=10)\n","DT_predict <- predict(DT_model, Test, type = \"class\")\n","confusionMatrix(DT_predict, Test$OK) \n","rpart.plot(DT_model)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"EM91HnJqh7D6","colab_type":"text"},"source":["**Random Forest**"]},{"cell_type":"code","metadata":{"id":"XUkbhaJ0CGDm","colab_type":"code","colab":{}},"source":["library(randomForest)\n","\n","RF_model <- randomForest(OK ~ ., data=Train, importance=TRUE, keep.forest=TRUE)\n","RF_predict <- predict(RF_model, Test)\n","confusionMatrix(Test$OK, RF_predict)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"lpGyjfJYh_xz","colab_type":"text"},"source":["**Support Vector Machine**"]},{"cell_type":"code","metadata":{"id":"-w2zylezKnee","colab_type":"code","colab":{}},"source":["library(e1071)\n","\n","SVM_model <- svm(OK ~ ., data = Train, kernel = \"linear\", cost = 10, scale = FALSE)\n","SVM_predict <- predict(SVM_model, Test)\n","confusionMatrix(SVM_predict, Test$OK)\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"pgdCy3jOmM61","colab_type":"text"},"source":["**Naive Bayes**"]},{"cell_type":"code","metadata":{"id":"gKfTuGGxEo-f","colab_type":"code","colab":{}},"source":["library(e1071) \n","\n","NB_model <- naiveBayes(OK ~ ., data=Train)\n","NB_predict <- predict(NB_model, Test)\n","confusionMatrix(NB_predict, Test$OK) "],"execution_count":null,"outputs":[]}]}